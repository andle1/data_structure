在计算机中的存储结构：顺序结构，链式结构
而哈希表是为了解决查询时间问题，用空间换时间。


哈希表，又叫散列表

散列函数（哈希函数）：将一组关键字印像到一个有限的连续的地址集中。
这里的有限连续，可以看为有序的数组，在查找的时候，是可以直接按照数组的下标快速查找到。而把key值转换为相应的存储位置，就是散列函数该做的事。


数据存储位置 = function(key);

这里这些方法是对于key值得处理：
直接定址法:     直接定地址
数字分析法:
平方取中法 :     乘以本身，取中间数字
取余法:          模一个数，取余
随机数法:        random()

散列函数设计要求：
计算简单
分布均匀

散列冲突原因是很多数据存到了相同的位置。
散列冲突的解决：
            1. 线性探测法，直接往后放, 缺点：容易造成数据集中。
开放地址法 ： 2. 二次探测法，放到远的地方，譬如放到离这个位置2^2远的位置
             3. 再哈希法：再设计一个散列函数，再计算位置
链地址法：同时存了数据和指向下一个数据的指针（链表）
