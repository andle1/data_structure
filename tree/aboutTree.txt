//根节点
//双亲节点    子节点上的节点
//子节点      双亲节点下的节点
//路径        从一个节点到另一个节点的路径
//节点的度    子节点的个数
//节点的权    节点的值
//叶子节点    没有子节点的节点
//子树
//层           节点的所在的层的等级数
//树的高度     最大的层数
//森林         多个不相交的数的集合

//二叉树    每个节点最多两个子节点,即度最大为2。子树有左右之分，次序不能颠倒
//满二叉树  所有叶子节点都在最后一层，而且节点总数为：2^n-1。n数的高度
//完全二叉树  完全二叉树 所有叶子节点都在最后一层或者倒数第二层，且最后一层的叶子节点在左边连续，倒数第二层的叶子节点在右边连续
//赫夫曼树   （最优二叉树）


存储结构：1、链式存储结构。 2、数组

数组存储的缺点;但是普通的二叉树用数组非常浪费空间，完全二叉树是最合适的选择

数组的子节点：
//第n个元素的左子节点的下标是： 2*n+1
//第n个元素的右子节点的下标是：2*n+2
//第n个元素的父亲节点的下标是：(n-1)/2      注意，根节点代表第0个,n=0，也就是数组的起始元素